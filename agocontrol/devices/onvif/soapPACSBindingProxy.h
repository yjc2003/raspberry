/* soapPACSBindingProxy.h
   Generated by gSOAP 2.8.15 from ./onvif/onvif.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapPACSBindingProxy_H
#define soapPACSBindingProxy_H
#include "soapH.h"

class SOAP_CMAC PACSBindingProxy : public soap
{ public:
	/// Endpoint URL of service 'PACSBindingProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	PACSBindingProxy();
	/// Construct from another engine state
	PACSBindingProxy(const struct soap&);
	/// Constructor with endpoint URL
	PACSBindingProxy(const char *url);
	/// Constructor with engine input+output mode control
	PACSBindingProxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	PACSBindingProxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	PACSBindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~PACSBindingProxy();
	/// Initializer used by constructors
	virtual	void PACSBindingProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to default
	virtual	void reset();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Put SOAP Header in message
	virtual	void soap_header(char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security);
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif

	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'GetServiceCapabilities' (returns error code or SOAP_OK)
	virtual	int GetServiceCapabilities(_ns3__GetServiceCapabilities *ns3__GetServiceCapabilities, _ns3__GetServiceCapabilitiesResponse *ns3__GetServiceCapabilitiesResponse) { return this->GetServiceCapabilities(NULL, NULL, ns3__GetServiceCapabilities, ns3__GetServiceCapabilitiesResponse); }
	virtual	int GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns3__GetServiceCapabilities *ns3__GetServiceCapabilities, _ns3__GetServiceCapabilitiesResponse *ns3__GetServiceCapabilitiesResponse);

	/// Web service operation 'GetAccessPointInfoList' (returns error code or SOAP_OK)
	virtual	int GetAccessPointInfoList(_ns3__GetAccessPointInfoList *ns3__GetAccessPointInfoList, _ns3__GetAccessPointInfoListResponse *ns3__GetAccessPointInfoListResponse) { return this->GetAccessPointInfoList(NULL, NULL, ns3__GetAccessPointInfoList, ns3__GetAccessPointInfoListResponse); }
	virtual	int GetAccessPointInfoList(const char *endpoint, const char *soap_action, _ns3__GetAccessPointInfoList *ns3__GetAccessPointInfoList, _ns3__GetAccessPointInfoListResponse *ns3__GetAccessPointInfoListResponse);

	/// Web service operation 'GetAccessPointInfo' (returns error code or SOAP_OK)
	virtual	int GetAccessPointInfo(_ns3__GetAccessPointInfo *ns3__GetAccessPointInfo, _ns3__GetAccessPointInfoResponse *ns3__GetAccessPointInfoResponse) { return this->GetAccessPointInfo(NULL, NULL, ns3__GetAccessPointInfo, ns3__GetAccessPointInfoResponse); }
	virtual	int GetAccessPointInfo(const char *endpoint, const char *soap_action, _ns3__GetAccessPointInfo *ns3__GetAccessPointInfo, _ns3__GetAccessPointInfoResponse *ns3__GetAccessPointInfoResponse);

	/// Web service operation 'GetAreaInfoList' (returns error code or SOAP_OK)
	virtual	int GetAreaInfoList(_ns3__GetAreaInfoList *ns3__GetAreaInfoList, _ns3__GetAreaInfoListResponse *ns3__GetAreaInfoListResponse) { return this->GetAreaInfoList(NULL, NULL, ns3__GetAreaInfoList, ns3__GetAreaInfoListResponse); }
	virtual	int GetAreaInfoList(const char *endpoint, const char *soap_action, _ns3__GetAreaInfoList *ns3__GetAreaInfoList, _ns3__GetAreaInfoListResponse *ns3__GetAreaInfoListResponse);

	/// Web service operation 'GetAreaInfo' (returns error code or SOAP_OK)
	virtual	int GetAreaInfo(_ns3__GetAreaInfo *ns3__GetAreaInfo, _ns3__GetAreaInfoResponse *ns3__GetAreaInfoResponse) { return this->GetAreaInfo(NULL, NULL, ns3__GetAreaInfo, ns3__GetAreaInfoResponse); }
	virtual	int GetAreaInfo(const char *endpoint, const char *soap_action, _ns3__GetAreaInfo *ns3__GetAreaInfo, _ns3__GetAreaInfoResponse *ns3__GetAreaInfoResponse);

	/// Web service operation 'GetAccessPointState' (returns error code or SOAP_OK)
	virtual	int GetAccessPointState(_ns3__GetAccessPointState *ns3__GetAccessPointState, _ns3__GetAccessPointStateResponse *ns3__GetAccessPointStateResponse) { return this->GetAccessPointState(NULL, NULL, ns3__GetAccessPointState, ns3__GetAccessPointStateResponse); }
	virtual	int GetAccessPointState(const char *endpoint, const char *soap_action, _ns3__GetAccessPointState *ns3__GetAccessPointState, _ns3__GetAccessPointStateResponse *ns3__GetAccessPointStateResponse);

	/// Web service operation 'EnableAccessPoint' (returns error code or SOAP_OK)
	virtual	int EnableAccessPoint(_ns3__EnableAccessPoint *ns3__EnableAccessPoint, _ns3__EnableAccessPointResponse *ns3__EnableAccessPointResponse) { return this->EnableAccessPoint(NULL, NULL, ns3__EnableAccessPoint, ns3__EnableAccessPointResponse); }
	virtual	int EnableAccessPoint(const char *endpoint, const char *soap_action, _ns3__EnableAccessPoint *ns3__EnableAccessPoint, _ns3__EnableAccessPointResponse *ns3__EnableAccessPointResponse);

	/// Web service operation 'DisableAccessPoint' (returns error code or SOAP_OK)
	virtual	int DisableAccessPoint(_ns3__DisableAccessPoint *ns3__DisableAccessPoint, _ns3__DisableAccessPointResponse *ns3__DisableAccessPointResponse) { return this->DisableAccessPoint(NULL, NULL, ns3__DisableAccessPoint, ns3__DisableAccessPointResponse); }
	virtual	int DisableAccessPoint(const char *endpoint, const char *soap_action, _ns3__DisableAccessPoint *ns3__DisableAccessPoint, _ns3__DisableAccessPointResponse *ns3__DisableAccessPointResponse);

	/// Web service operation 'ExternalAuthorization' (returns error code or SOAP_OK)
	virtual	int ExternalAuthorization(_ns3__ExternalAuthorization *ns3__ExternalAuthorization, _ns3__ExternalAuthorizationResponse *ns3__ExternalAuthorizationResponse) { return this->ExternalAuthorization(NULL, NULL, ns3__ExternalAuthorization, ns3__ExternalAuthorizationResponse); }
	virtual	int ExternalAuthorization(const char *endpoint, const char *soap_action, _ns3__ExternalAuthorization *ns3__ExternalAuthorization, _ns3__ExternalAuthorizationResponse *ns3__ExternalAuthorizationResponse);
};
#endif
