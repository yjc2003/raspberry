/* soapDeviceIOBindingProxy.cpp
   Generated by gSOAP 2.8.15 from ./onvif/onvif.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapDeviceIOBindingProxy.h"

DeviceIOBindingProxy::DeviceIOBindingProxy()
{	DeviceIOBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

DeviceIOBindingProxy::DeviceIOBindingProxy(const struct soap &_soap) : soap(_soap)
{ }

DeviceIOBindingProxy::DeviceIOBindingProxy(const char *url)
{	DeviceIOBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

DeviceIOBindingProxy::DeviceIOBindingProxy(soap_mode iomode)
{	DeviceIOBindingProxy_init(iomode, iomode);
}

DeviceIOBindingProxy::DeviceIOBindingProxy(const char *url, soap_mode iomode)
{	DeviceIOBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

DeviceIOBindingProxy::DeviceIOBindingProxy(soap_mode imode, soap_mode omode)
{	DeviceIOBindingProxy_init(imode, omode);
}

DeviceIOBindingProxy::~DeviceIOBindingProxy()
{ }

void DeviceIOBindingProxy::DeviceIOBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"wsa", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL, NULL},
	{"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
	{"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
	{"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
	{"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
	{"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
	{"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
	{"wsc", "http://schemas.xmlsoap.org/ws/2005/02/sc", NULL, NULL},
	{"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
	{"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
	{"ns4", "http://www.onvif.org/ver10/pacs", NULL, NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"tt", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"wsrfbf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"wstop", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"wsrfr", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
	{"ns1", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"ns2", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
	{"ns3", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
	{"ns5", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
	{"tad", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
	{"tan", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
	{"tdn", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
	{"tds", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"tev", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
	{"wsnt", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"timg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
	{"tls", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
	{"tptz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
	{"trc", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
	{"trp", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
	{"trt", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{"trv", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
	{"tse", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void DeviceIOBindingProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void DeviceIOBindingProxy::reset()
{	destroy();
	soap_done(this);
	soap_init(this);
	DeviceIOBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void DeviceIOBindingProxy::soap_noheader()
{	this->header = NULL;
}

void DeviceIOBindingProxy::soap_header(char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence, char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct _wsse__Security *wsse__Security)
{	::soap_header(this);
	this->header->wsa__MessageID = wsa__MessageID;
	this->header->wsa__RelatesTo = wsa__RelatesTo;
	this->header->wsa__From = wsa__From;
	this->header->wsa__ReplyTo = wsa__ReplyTo;
	this->header->wsa__FaultTo = wsa__FaultTo;
	this->header->wsa__To = wsa__To;
	this->header->wsa__Action = wsa__Action;
	this->header->wsdd__AppSequence = wsdd__AppSequence;
	this->header->wsa5__MessageID = wsa5__MessageID;
	this->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->header->wsa5__From = wsa5__From;
	this->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->header->wsa5__FaultTo = wsa5__FaultTo;
	this->header->wsa5__To = wsa5__To;
	this->header->wsa5__Action = wsa5__Action;
	this->header->chan__ChannelInstance = chan__ChannelInstance;
	this->header->wsse__Security = wsse__Security;
}

const SOAP_ENV__Header *DeviceIOBindingProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *DeviceIOBindingProxy::soap_fault()
{	return this->fault;
}

const char *DeviceIOBindingProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *DeviceIOBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int DeviceIOBindingProxy::soap_close_socket()
{	return soap_closesock(this);
}

int DeviceIOBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void DeviceIOBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void DeviceIOBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *DeviceIOBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int DeviceIOBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _ns1__GetServiceCapabilities *ns1__GetServiceCapabilities, _ns1__GetServiceCapabilitiesResponse *ns1__GetServiceCapabilitiesResponse)
{	struct soap *soap = this;
	struct __ns1__GetServiceCapabilities soap_tmp___ns1__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetServiceCapabilities.ns1__GetServiceCapabilities = ns1__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities, "-ns1:GetServiceCapabilities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities, "-ns1:GetServiceCapabilities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetServiceCapabilitiesResponse)
		return soap_closesock(soap);
	ns1__GetServiceCapabilitiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetServiceCapabilitiesResponse->soap_get(soap, "ns1:GetServiceCapabilitiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetRelayOutputOptions(const char *endpoint, const char *soap_action, _ns1__GetRelayOutputOptions *ns1__GetRelayOutputOptions, _ns1__GetRelayOutputOptionsResponse *ns1__GetRelayOutputOptionsResponse)
{	struct soap *soap = this;
	struct __ns1__GetRelayOutputOptions soap_tmp___ns1__GetRelayOutputOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetRelayOutputOptions.ns1__GetRelayOutputOptions = ns1__GetRelayOutputOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetRelayOutputOptions(soap, &soap_tmp___ns1__GetRelayOutputOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetRelayOutputOptions(soap, &soap_tmp___ns1__GetRelayOutputOptions, "-ns1:GetRelayOutputOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetRelayOutputOptions(soap, &soap_tmp___ns1__GetRelayOutputOptions, "-ns1:GetRelayOutputOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetRelayOutputOptionsResponse)
		return soap_closesock(soap);
	ns1__GetRelayOutputOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetRelayOutputOptionsResponse->soap_get(soap, "ns1:GetRelayOutputOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetAudioSources(const char *endpoint, const char *soap_action, _trt__GetAudioSources *trt__GetAudioSources, _trt__GetAudioSourcesResponse *trt__GetAudioSourcesResponse)
{	struct soap *soap = this;
	struct __ns1__GetAudioSources soap_tmp___ns1__GetAudioSources;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAudioSources.trt__GetAudioSources = trt__GetAudioSources;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAudioSources(soap, &soap_tmp___ns1__GetAudioSources);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAudioSources(soap, &soap_tmp___ns1__GetAudioSources, "-ns1:GetAudioSources", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAudioSources(soap, &soap_tmp___ns1__GetAudioSources, "-ns1:GetAudioSources", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!trt__GetAudioSourcesResponse)
		return soap_closesock(soap);
	trt__GetAudioSourcesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetAudioSourcesResponse->soap_get(soap, "trt:GetAudioSourcesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetAudioOutputs(const char *endpoint, const char *soap_action, _trt__GetAudioOutputs *trt__GetAudioOutputs, _trt__GetAudioOutputsResponse *trt__GetAudioOutputsResponse)
{	struct soap *soap = this;
	struct __ns1__GetAudioOutputs soap_tmp___ns1__GetAudioOutputs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAudioOutputs.trt__GetAudioOutputs = trt__GetAudioOutputs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAudioOutputs(soap, &soap_tmp___ns1__GetAudioOutputs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAudioOutputs(soap, &soap_tmp___ns1__GetAudioOutputs, "-ns1:GetAudioOutputs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAudioOutputs(soap, &soap_tmp___ns1__GetAudioOutputs, "-ns1:GetAudioOutputs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!trt__GetAudioOutputsResponse)
		return soap_closesock(soap);
	trt__GetAudioOutputsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetAudioOutputsResponse->soap_get(soap, "trt:GetAudioOutputsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetVideoSources(const char *endpoint, const char *soap_action, _trt__GetVideoSources *trt__GetVideoSources, _trt__GetVideoSourcesResponse *trt__GetVideoSourcesResponse)
{	struct soap *soap = this;
	struct __ns1__GetVideoSources soap_tmp___ns1__GetVideoSources;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetVideoSources.trt__GetVideoSources = trt__GetVideoSources;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetVideoSources(soap, &soap_tmp___ns1__GetVideoSources);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetVideoSources(soap, &soap_tmp___ns1__GetVideoSources, "-ns1:GetVideoSources", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetVideoSources(soap, &soap_tmp___ns1__GetVideoSources, "-ns1:GetVideoSources", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!trt__GetVideoSourcesResponse)
		return soap_closesock(soap);
	trt__GetVideoSourcesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetVideoSourcesResponse->soap_get(soap, "trt:GetVideoSourcesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetVideoOutputs(const char *endpoint, const char *soap_action, _ns1__GetVideoOutputs *ns1__GetVideoOutputs, _ns1__GetVideoOutputsResponse *ns1__GetVideoOutputsResponse)
{	struct soap *soap = this;
	struct __ns1__GetVideoOutputs soap_tmp___ns1__GetVideoOutputs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetVideoOutputs.ns1__GetVideoOutputs = ns1__GetVideoOutputs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetVideoOutputs(soap, &soap_tmp___ns1__GetVideoOutputs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetVideoOutputs(soap, &soap_tmp___ns1__GetVideoOutputs, "-ns1:GetVideoOutputs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetVideoOutputs(soap, &soap_tmp___ns1__GetVideoOutputs, "-ns1:GetVideoOutputs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetVideoOutputsResponse)
		return soap_closesock(soap);
	ns1__GetVideoOutputsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetVideoOutputsResponse->soap_get(soap, "ns1:GetVideoOutputsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetVideoSourceConfiguration(const char *endpoint, const char *soap_action, _ns1__GetVideoSourceConfiguration *ns1__GetVideoSourceConfiguration, _ns1__GetVideoSourceConfigurationResponse *ns1__GetVideoSourceConfigurationResponse)
{	struct soap *soap = this;
	struct __ns1__GetVideoSourceConfiguration soap_tmp___ns1__GetVideoSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetVideoSourceConfiguration.ns1__GetVideoSourceConfiguration = ns1__GetVideoSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetVideoSourceConfiguration(soap, &soap_tmp___ns1__GetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetVideoSourceConfiguration(soap, &soap_tmp___ns1__GetVideoSourceConfiguration, "-ns1:GetVideoSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetVideoSourceConfiguration(soap, &soap_tmp___ns1__GetVideoSourceConfiguration, "-ns1:GetVideoSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetVideoSourceConfigurationResponse)
		return soap_closesock(soap);
	ns1__GetVideoSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetVideoSourceConfigurationResponse->soap_get(soap, "ns1:GetVideoSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetVideoOutputConfiguration(const char *endpoint, const char *soap_action, _ns1__GetVideoOutputConfiguration *ns1__GetVideoOutputConfiguration, _ns1__GetVideoOutputConfigurationResponse *ns1__GetVideoOutputConfigurationResponse)
{	struct soap *soap = this;
	struct __ns1__GetVideoOutputConfiguration soap_tmp___ns1__GetVideoOutputConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetVideoOutputConfiguration.ns1__GetVideoOutputConfiguration = ns1__GetVideoOutputConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetVideoOutputConfiguration(soap, &soap_tmp___ns1__GetVideoOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetVideoOutputConfiguration(soap, &soap_tmp___ns1__GetVideoOutputConfiguration, "-ns1:GetVideoOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetVideoOutputConfiguration(soap, &soap_tmp___ns1__GetVideoOutputConfiguration, "-ns1:GetVideoOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetVideoOutputConfigurationResponse)
		return soap_closesock(soap);
	ns1__GetVideoOutputConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetVideoOutputConfigurationResponse->soap_get(soap, "ns1:GetVideoOutputConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetAudioSourceConfiguration(const char *endpoint, const char *soap_action, _ns1__GetAudioSourceConfiguration *ns1__GetAudioSourceConfiguration, _ns1__GetAudioSourceConfigurationResponse *ns1__GetAudioSourceConfigurationResponse)
{	struct soap *soap = this;
	struct __ns1__GetAudioSourceConfiguration soap_tmp___ns1__GetAudioSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAudioSourceConfiguration.ns1__GetAudioSourceConfiguration = ns1__GetAudioSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAudioSourceConfiguration(soap, &soap_tmp___ns1__GetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAudioSourceConfiguration(soap, &soap_tmp___ns1__GetAudioSourceConfiguration, "-ns1:GetAudioSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAudioSourceConfiguration(soap, &soap_tmp___ns1__GetAudioSourceConfiguration, "-ns1:GetAudioSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAudioSourceConfigurationResponse)
		return soap_closesock(soap);
	ns1__GetAudioSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAudioSourceConfigurationResponse->soap_get(soap, "ns1:GetAudioSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetAudioOutputConfiguration(const char *endpoint, const char *soap_action, _ns1__GetAudioOutputConfiguration *ns1__GetAudioOutputConfiguration, _ns1__GetAudioOutputConfigurationResponse *ns1__GetAudioOutputConfigurationResponse)
{	struct soap *soap = this;
	struct __ns1__GetAudioOutputConfiguration soap_tmp___ns1__GetAudioOutputConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAudioOutputConfiguration.ns1__GetAudioOutputConfiguration = ns1__GetAudioOutputConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAudioOutputConfiguration(soap, &soap_tmp___ns1__GetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAudioOutputConfiguration(soap, &soap_tmp___ns1__GetAudioOutputConfiguration, "-ns1:GetAudioOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAudioOutputConfiguration(soap, &soap_tmp___ns1__GetAudioOutputConfiguration, "-ns1:GetAudioOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAudioOutputConfigurationResponse)
		return soap_closesock(soap);
	ns1__GetAudioOutputConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAudioOutputConfigurationResponse->soap_get(soap, "ns1:GetAudioOutputConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::SetVideoSourceConfiguration(const char *endpoint, const char *soap_action, _ns1__SetVideoSourceConfiguration *ns1__SetVideoSourceConfiguration, _ns1__SetVideoSourceConfigurationResponse *ns1__SetVideoSourceConfigurationResponse)
{	struct soap *soap = this;
	struct __ns1__SetVideoSourceConfiguration soap_tmp___ns1__SetVideoSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetVideoSourceConfiguration.ns1__SetVideoSourceConfiguration = ns1__SetVideoSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetVideoSourceConfiguration(soap, &soap_tmp___ns1__SetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetVideoSourceConfiguration(soap, &soap_tmp___ns1__SetVideoSourceConfiguration, "-ns1:SetVideoSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetVideoSourceConfiguration(soap, &soap_tmp___ns1__SetVideoSourceConfiguration, "-ns1:SetVideoSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetVideoSourceConfigurationResponse)
		return soap_closesock(soap);
	ns1__SetVideoSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetVideoSourceConfigurationResponse->soap_get(soap, "ns1:SetVideoSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::SetVideoOutputConfiguration(const char *endpoint, const char *soap_action, _ns1__SetVideoOutputConfiguration *ns1__SetVideoOutputConfiguration, _ns1__SetVideoOutputConfigurationResponse *ns1__SetVideoOutputConfigurationResponse)
{	struct soap *soap = this;
	struct __ns1__SetVideoOutputConfiguration soap_tmp___ns1__SetVideoOutputConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetVideoOutputConfiguration.ns1__SetVideoOutputConfiguration = ns1__SetVideoOutputConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetVideoOutputConfiguration(soap, &soap_tmp___ns1__SetVideoOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetVideoOutputConfiguration(soap, &soap_tmp___ns1__SetVideoOutputConfiguration, "-ns1:SetVideoOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetVideoOutputConfiguration(soap, &soap_tmp___ns1__SetVideoOutputConfiguration, "-ns1:SetVideoOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetVideoOutputConfigurationResponse)
		return soap_closesock(soap);
	ns1__SetVideoOutputConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetVideoOutputConfigurationResponse->soap_get(soap, "ns1:SetVideoOutputConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::SetAudioSourceConfiguration(const char *endpoint, const char *soap_action, _ns1__SetAudioSourceConfiguration *ns1__SetAudioSourceConfiguration, _ns1__SetAudioSourceConfigurationResponse *ns1__SetAudioSourceConfigurationResponse)
{	struct soap *soap = this;
	struct __ns1__SetAudioSourceConfiguration soap_tmp___ns1__SetAudioSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetAudioSourceConfiguration.ns1__SetAudioSourceConfiguration = ns1__SetAudioSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetAudioSourceConfiguration(soap, &soap_tmp___ns1__SetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetAudioSourceConfiguration(soap, &soap_tmp___ns1__SetAudioSourceConfiguration, "-ns1:SetAudioSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetAudioSourceConfiguration(soap, &soap_tmp___ns1__SetAudioSourceConfiguration, "-ns1:SetAudioSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetAudioSourceConfigurationResponse)
		return soap_closesock(soap);
	ns1__SetAudioSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetAudioSourceConfigurationResponse->soap_get(soap, "ns1:SetAudioSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::SetAudioOutputConfiguration(const char *endpoint, const char *soap_action, _ns1__SetAudioOutputConfiguration *ns1__SetAudioOutputConfiguration, _ns1__SetAudioOutputConfigurationResponse *ns1__SetAudioOutputConfigurationResponse)
{	struct soap *soap = this;
	struct __ns1__SetAudioOutputConfiguration soap_tmp___ns1__SetAudioOutputConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetAudioOutputConfiguration.ns1__SetAudioOutputConfiguration = ns1__SetAudioOutputConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetAudioOutputConfiguration(soap, &soap_tmp___ns1__SetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetAudioOutputConfiguration(soap, &soap_tmp___ns1__SetAudioOutputConfiguration, "-ns1:SetAudioOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetAudioOutputConfiguration(soap, &soap_tmp___ns1__SetAudioOutputConfiguration, "-ns1:SetAudioOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetAudioOutputConfigurationResponse)
		return soap_closesock(soap);
	ns1__SetAudioOutputConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetAudioOutputConfigurationResponse->soap_get(soap, "ns1:SetAudioOutputConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetVideoSourceConfigurationOptions(const char *endpoint, const char *soap_action, _ns1__GetVideoSourceConfigurationOptions *ns1__GetVideoSourceConfigurationOptions, _ns1__GetVideoSourceConfigurationOptionsResponse *ns1__GetVideoSourceConfigurationOptionsResponse)
{	struct soap *soap = this;
	struct __ns1__GetVideoSourceConfigurationOptions soap_tmp___ns1__GetVideoSourceConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetVideoSourceConfigurationOptions.ns1__GetVideoSourceConfigurationOptions = ns1__GetVideoSourceConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns1__GetVideoSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns1__GetVideoSourceConfigurationOptions, "-ns1:GetVideoSourceConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetVideoSourceConfigurationOptions(soap, &soap_tmp___ns1__GetVideoSourceConfigurationOptions, "-ns1:GetVideoSourceConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetVideoSourceConfigurationOptionsResponse)
		return soap_closesock(soap);
	ns1__GetVideoSourceConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetVideoSourceConfigurationOptionsResponse->soap_get(soap, "ns1:GetVideoSourceConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetVideoOutputConfigurationOptions(const char *endpoint, const char *soap_action, _ns1__GetVideoOutputConfigurationOptions *ns1__GetVideoOutputConfigurationOptions, _ns1__GetVideoOutputConfigurationOptionsResponse *ns1__GetVideoOutputConfigurationOptionsResponse)
{	struct soap *soap = this;
	struct __ns1__GetVideoOutputConfigurationOptions soap_tmp___ns1__GetVideoOutputConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetVideoOutputConfigurationOptions.ns1__GetVideoOutputConfigurationOptions = ns1__GetVideoOutputConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetVideoOutputConfigurationOptions(soap, &soap_tmp___ns1__GetVideoOutputConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetVideoOutputConfigurationOptions(soap, &soap_tmp___ns1__GetVideoOutputConfigurationOptions, "-ns1:GetVideoOutputConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetVideoOutputConfigurationOptions(soap, &soap_tmp___ns1__GetVideoOutputConfigurationOptions, "-ns1:GetVideoOutputConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetVideoOutputConfigurationOptionsResponse)
		return soap_closesock(soap);
	ns1__GetVideoOutputConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetVideoOutputConfigurationOptionsResponse->soap_get(soap, "ns1:GetVideoOutputConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetAudioSourceConfigurationOptions(const char *endpoint, const char *soap_action, _ns1__GetAudioSourceConfigurationOptions *ns1__GetAudioSourceConfigurationOptions, _ns1__GetAudioSourceConfigurationOptionsResponse *ns1__GetAudioSourceConfigurationOptionsResponse)
{	struct soap *soap = this;
	struct __ns1__GetAudioSourceConfigurationOptions soap_tmp___ns1__GetAudioSourceConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAudioSourceConfigurationOptions.ns1__GetAudioSourceConfigurationOptions = ns1__GetAudioSourceConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns1__GetAudioSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns1__GetAudioSourceConfigurationOptions, "-ns1:GetAudioSourceConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAudioSourceConfigurationOptions(soap, &soap_tmp___ns1__GetAudioSourceConfigurationOptions, "-ns1:GetAudioSourceConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAudioSourceConfigurationOptionsResponse)
		return soap_closesock(soap);
	ns1__GetAudioSourceConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAudioSourceConfigurationOptionsResponse->soap_get(soap, "ns1:GetAudioSourceConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetAudioOutputConfigurationOptions(const char *endpoint, const char *soap_action, _ns1__GetAudioOutputConfigurationOptions *ns1__GetAudioOutputConfigurationOptions, _ns1__GetAudioOutputConfigurationOptionsResponse *ns1__GetAudioOutputConfigurationOptionsResponse)
{	struct soap *soap = this;
	struct __ns1__GetAudioOutputConfigurationOptions soap_tmp___ns1__GetAudioOutputConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetAudioOutputConfigurationOptions.ns1__GetAudioOutputConfigurationOptions = ns1__GetAudioOutputConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns1__GetAudioOutputConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns1__GetAudioOutputConfigurationOptions, "-ns1:GetAudioOutputConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAudioOutputConfigurationOptions(soap, &soap_tmp___ns1__GetAudioOutputConfigurationOptions, "-ns1:GetAudioOutputConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetAudioOutputConfigurationOptionsResponse)
		return soap_closesock(soap);
	ns1__GetAudioOutputConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAudioOutputConfigurationOptionsResponse->soap_get(soap, "ns1:GetAudioOutputConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetRelayOutputs(const char *endpoint, const char *soap_action, _tds__GetRelayOutputs *tds__GetRelayOutputs, _tds__GetRelayOutputsResponse *tds__GetRelayOutputsResponse)
{	struct soap *soap = this;
	struct __ns1__GetRelayOutputs soap_tmp___ns1__GetRelayOutputs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetRelayOutputs.tds__GetRelayOutputs = tds__GetRelayOutputs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetRelayOutputs(soap, &soap_tmp___ns1__GetRelayOutputs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetRelayOutputs(soap, &soap_tmp___ns1__GetRelayOutputs, "-ns1:GetRelayOutputs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetRelayOutputs(soap, &soap_tmp___ns1__GetRelayOutputs, "-ns1:GetRelayOutputs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tds__GetRelayOutputsResponse)
		return soap_closesock(soap);
	tds__GetRelayOutputsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetRelayOutputsResponse->soap_get(soap, "tds:GetRelayOutputsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::SetRelayOutputSettings(const char *endpoint, const char *soap_action, _ns1__SetRelayOutputSettings *ns1__SetRelayOutputSettings, _ns1__SetRelayOutputSettingsResponse *ns1__SetRelayOutputSettingsResponse)
{	struct soap *soap = this;
	struct __ns1__SetRelayOutputSettings soap_tmp___ns1__SetRelayOutputSettings;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetRelayOutputSettings.ns1__SetRelayOutputSettings = ns1__SetRelayOutputSettings;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetRelayOutputSettings(soap, &soap_tmp___ns1__SetRelayOutputSettings);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetRelayOutputSettings(soap, &soap_tmp___ns1__SetRelayOutputSettings, "-ns1:SetRelayOutputSettings", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetRelayOutputSettings(soap, &soap_tmp___ns1__SetRelayOutputSettings, "-ns1:SetRelayOutputSettings", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetRelayOutputSettingsResponse)
		return soap_closesock(soap);
	ns1__SetRelayOutputSettingsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetRelayOutputSettingsResponse->soap_get(soap, "ns1:SetRelayOutputSettingsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::SetRelayOutputState(const char *endpoint, const char *soap_action, _tds__SetRelayOutputState *tds__SetRelayOutputState, _tds__SetRelayOutputStateResponse *tds__SetRelayOutputStateResponse)
{	struct soap *soap = this;
	struct __ns1__SetRelayOutputState soap_tmp___ns1__SetRelayOutputState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetRelayOutputState.tds__SetRelayOutputState = tds__SetRelayOutputState;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetRelayOutputState(soap, &soap_tmp___ns1__SetRelayOutputState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetRelayOutputState(soap, &soap_tmp___ns1__SetRelayOutputState, "-ns1:SetRelayOutputState", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetRelayOutputState(soap, &soap_tmp___ns1__SetRelayOutputState, "-ns1:SetRelayOutputState", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!tds__SetRelayOutputStateResponse)
		return soap_closesock(soap);
	tds__SetRelayOutputStateResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetRelayOutputStateResponse->soap_get(soap, "tds:SetRelayOutputStateResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetDigitalInputs(const char *endpoint, const char *soap_action, _ns1__GetDigitalInputs *ns1__GetDigitalInputs, _ns1__GetDigitalInputsResponse *ns1__GetDigitalInputsResponse)
{	struct soap *soap = this;
	struct __ns1__GetDigitalInputs soap_tmp___ns1__GetDigitalInputs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetDigitalInputs.ns1__GetDigitalInputs = ns1__GetDigitalInputs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetDigitalInputs(soap, &soap_tmp___ns1__GetDigitalInputs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetDigitalInputs(soap, &soap_tmp___ns1__GetDigitalInputs, "-ns1:GetDigitalInputs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetDigitalInputs(soap, &soap_tmp___ns1__GetDigitalInputs, "-ns1:GetDigitalInputs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetDigitalInputsResponse)
		return soap_closesock(soap);
	ns1__GetDigitalInputsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetDigitalInputsResponse->soap_get(soap, "ns1:GetDigitalInputsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetSerialPorts(const char *endpoint, const char *soap_action, _ns1__GetSerialPorts *ns1__GetSerialPorts, _ns1__GetSerialPortsResponse *ns1__GetSerialPortsResponse)
{	struct soap *soap = this;
	struct __ns1__GetSerialPorts soap_tmp___ns1__GetSerialPorts;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSerialPorts.ns1__GetSerialPorts = ns1__GetSerialPorts;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSerialPorts(soap, &soap_tmp___ns1__GetSerialPorts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSerialPorts(soap, &soap_tmp___ns1__GetSerialPorts, "-ns1:GetSerialPorts", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSerialPorts(soap, &soap_tmp___ns1__GetSerialPorts, "-ns1:GetSerialPorts", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetSerialPortsResponse)
		return soap_closesock(soap);
	ns1__GetSerialPortsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSerialPortsResponse->soap_get(soap, "ns1:GetSerialPortsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetSerialPortConfiguration(const char *endpoint, const char *soap_action, _ns1__GetSerialPortConfiguration *ns1__GetSerialPortConfiguration, _ns1__GetSerialPortConfigurationResponse *ns1__GetSerialPortConfigurationResponse)
{	struct soap *soap = this;
	struct __ns1__GetSerialPortConfiguration soap_tmp___ns1__GetSerialPortConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSerialPortConfiguration.ns1__GetSerialPortConfiguration = ns1__GetSerialPortConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSerialPortConfiguration(soap, &soap_tmp___ns1__GetSerialPortConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSerialPortConfiguration(soap, &soap_tmp___ns1__GetSerialPortConfiguration, "-ns1:GetSerialPortConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSerialPortConfiguration(soap, &soap_tmp___ns1__GetSerialPortConfiguration, "-ns1:GetSerialPortConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetSerialPortConfigurationResponse)
		return soap_closesock(soap);
	ns1__GetSerialPortConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSerialPortConfigurationResponse->soap_get(soap, "ns1:GetSerialPortConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::SetSerialPortConfiguration(const char *endpoint, const char *soap_action, _ns1__SetSerialPortConfiguration *ns1__SetSerialPortConfiguration, _ns1__SetSerialPortConfigurationResponse *ns1__SetSerialPortConfigurationResponse)
{	struct soap *soap = this;
	struct __ns1__SetSerialPortConfiguration soap_tmp___ns1__SetSerialPortConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SetSerialPortConfiguration.ns1__SetSerialPortConfiguration = ns1__SetSerialPortConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetSerialPortConfiguration(soap, &soap_tmp___ns1__SetSerialPortConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetSerialPortConfiguration(soap, &soap_tmp___ns1__SetSerialPortConfiguration, "-ns1:SetSerialPortConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetSerialPortConfiguration(soap, &soap_tmp___ns1__SetSerialPortConfiguration, "-ns1:SetSerialPortConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SetSerialPortConfigurationResponse)
		return soap_closesock(soap);
	ns1__SetSerialPortConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetSerialPortConfigurationResponse->soap_get(soap, "ns1:SetSerialPortConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::GetSerialPortConfigurationOptions(const char *endpoint, const char *soap_action, _ns1__GetSerialPortConfigurationOptions *ns1__GetSerialPortConfigurationOptions, _ns1__GetSerialPortConfigurationOptionsResponse *ns1__GetSerialPortConfigurationOptionsResponse)
{	struct soap *soap = this;
	struct __ns1__GetSerialPortConfigurationOptions soap_tmp___ns1__GetSerialPortConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSerialPortConfigurationOptions.ns1__GetSerialPortConfigurationOptions = ns1__GetSerialPortConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSerialPortConfigurationOptions(soap, &soap_tmp___ns1__GetSerialPortConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSerialPortConfigurationOptions(soap, &soap_tmp___ns1__GetSerialPortConfigurationOptions, "-ns1:GetSerialPortConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSerialPortConfigurationOptions(soap, &soap_tmp___ns1__GetSerialPortConfigurationOptions, "-ns1:GetSerialPortConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetSerialPortConfigurationOptionsResponse)
		return soap_closesock(soap);
	ns1__GetSerialPortConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSerialPortConfigurationOptionsResponse->soap_get(soap, "ns1:GetSerialPortConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int DeviceIOBindingProxy::SendReceiveSerialCommand(const char *endpoint, const char *soap_action, _ns1__SendReceiveSerialCommand *ns1__SendReceiveSerialCommand, _ns1__SendReceiveSerialCommandResponse *ns1__SendReceiveSerialCommandResponse)
{	struct soap *soap = this;
	struct __ns1__SendReceiveSerialCommand soap_tmp___ns1__SendReceiveSerialCommand;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__SendReceiveSerialCommand.ns1__SendReceiveSerialCommand = ns1__SendReceiveSerialCommand;
	soap_begin(soap);
	soap_set_version(soap, 2); /* SOAP1.2 */
	soap_serializeheader(soap);
	soap_serialize___ns1__SendReceiveSerialCommand(soap, &soap_tmp___ns1__SendReceiveSerialCommand);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SendReceiveSerialCommand(soap, &soap_tmp___ns1__SendReceiveSerialCommand, "-ns1:SendReceiveSerialCommand", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SendReceiveSerialCommand(soap, &soap_tmp___ns1__SendReceiveSerialCommand, "-ns1:SendReceiveSerialCommand", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SendReceiveSerialCommandResponse)
		return soap_closesock(soap);
	ns1__SendReceiveSerialCommandResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SendReceiveSerialCommandResponse->soap_get(soap, "ns1:SendReceiveSerialCommandResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
