#!/usr/bin/python
import sys
sys.path.append('@BINDIR@')
import agoclient

import cgi
import cgitb

import subprocess
import urllib2

from nss.error import NSPRError
import nss.io as io
import nss.nss as nss
import nss.ssl as ssl

cgitb.enable()

certdir = agoclient.CONFDIR + '/cloud'

def password_callback(slot, retry, password):
	with open (certdir + "pwfile", "r") as pwfile:
		data = pwfile.read()
		return data

def read_cert(certdir, name):
	try:
		nss.nss_init(certdir)
		certdb = nss.get_default_certdb()
		nss.set_password_callback(password_callback)
		cert = nss.find_cert_from_nickname(uuid)
		
	except NSPRError:
		return False
	except:
		return False
	return True

def getP12(SYSTEM_UUID, username, password, pin):
	url = "http://cloud.agocontrol.com/agoka/?uuid=%s&username=%s&password=%s" % (SYSTEM_UUID, username, password)
	file_name = "/tmp/%s.p12" % SYSTEM_UUID
	u = urllib2.urlopen(url)
	buffer = u.read()
	if 'Incorrect username or password.' in buffer:
		return False
	else:
		f = open(file_name, 'wb')
		f.write(buffer)
		f.close()
		ret = subprocess.call([agoclient.BINDIR + "/agocloud-import.sh", file_name, pin])
		if ret == 0:
		    return True


sys.stdout.write("Content-Type: text/html\n\n")

form = cgi.FieldStorage()
uuid = agoclient.getConfigOption("system", "uuid", "")

if "action" not in form:
	if not read_cert(certdir, uuid):
	    sys.stdout.write('{ "rc": "1" }')
	    sys.exit(0)
else:	
	if "username" not in form or "password" not in form:
		print "<H1>Error</H1>please provide uuid, username and password"

	username=form.getfirst("username")
	password=form.getfirst("password")
	pin=form.getfirst("pin")
	if not getP12(uuid, username, password, pin):
	    sys.stdout.write('{ "rc": "2" }')
	    sys.exit(0)
	if not read_cert(certdir, uuid):
		sys.stdout.write('{ "rc": "1" }')
		sys.exit(0)

sys.stdout.write('{ "rc": "0" }')
